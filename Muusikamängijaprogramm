import tkinter as tk
import pygame
import os
import random
import time
import threading
from tkinter import filedialog
from tkinter import *

#Kasutatud materjalid: https://www.youtube.com/watch?v=jO6qQDNa2UY
#https://www.pygame.org/docs/ref/mixer.html

pygame.mixer.init()
pygame.init()

class UI:
    def __init__(self):
        self.valmista_p√µhi()
    # loob GUI akna ja komponendid
    def valmista_p√µhi(self):
        
        self.root = tk.Tk()
    # tkinteri akna loomine
        self.root.geometry("483x600")#kuldl√µige
        self.root.title("Muusika m√§ngija")
        # nupud ning teised UI elemendid
        self.playPause_nupp = tk.Button(self.root, text="‚èØ", font=("Impact", 18), command=self.playpause)
        self.playPause_nupp.pack(padx=10, pady=10)
        self.laulul√µpukontrollija = False
        
        self.Fail_nupp = tk.Button(self.root, text="Fail", font=("Arial", 18), command=self.valifail)
        self.Fail_nupp.pack(padx= 10, pady=10)
        self.lauludej√§rjend = []
        self.hetkelm√§ngivalauluindeks = -1
        
        self.j√§rgminelaul_nupp = tk.Button(self.root, text="‚è≠", font=("Arial", 18), command=self.j√§rgminelaul)
        self.j√§rgminelaul_nupp.pack(padx = 10, pady=10)
        
        self.shuffle_nupp = tk.Button(self.root, text="üîÄ", font=("Arial", 18), command=self.shuffle)
        self.shuffle_nupp.pack(padx = 10, pady = 10)
        self.korra_juba_tehtud_shuffle = False
        
        self.vol√º√ºmslider = tk.Scale(self.root, from_=100, to=0, length=200, command=self.slider_v√§√§rtused)
        self.vol√º√ºmslider.set(100)
        self.vol√º√ºmslider.pack(padx = 10, pady = 10)
        self.lauluscrollslider = tk.Scale(self.root, from_=0, to = 100, orient=HORIZONTAL, length= 400, command=self.scrollilaulus)
        self.lauluscrollslider.pack(padx = 10, pady = 10)
        
        # sulgemise s√ºndmus
        self.root.protocol("WM_DELETE_WINDOW", self.sulgemine)
        # akna avamine
        self.root.mainloop()
    # play/pause nupu funktsioon
    def playpause(self):
        if pygame.mixer.get_busy() == False:
            # kui muusika ei m√§ngi, alustab laulu m√§ngimist, laulu l√µppedes k√§ivitab uue laulu valimise threadi
            self.hetkelm√§ngivalauluindeks += 1
            pygame.mixer.Channel(0).play(pygame.mixer.Sound(self.lauludej√§rjend[self.hetkelm√§ngivalauluindeks]))
            self.Kanal0t√∂√∂olek = True
            if not(self.laulul√µpukontrollija):
                self.l√µppenud_laulu_kontrolli_eraldi_thread = threading.Thread(target=self.uuslaulpealel√µppu)#Sain abi vennalt, Janar-Keit Jaaksonilt.
                self.l√µppenud_laulu_kontrolli_eraldi_thread.daemon = True
                self.l√µppenud_laulu_kontrolli_eraldi_thread.start()
                self.laulul√µpukontrollija = True
        
        elif self.Kanal0t√∂√∂olek:
            pygame.mixer.Channel(0).pause()
            self.Kanal0t√∂√∂olek = False
        else:
            pygame.mixer.Channel(0).unpause()
            self.Kanal0t√∂√∂olek = True
     # otsib uue laulu ning m√§ngib kui eelmine l√§bi saab      
    def uuslaulpealel√µppu(self):
        while True:
            if not(pygame.mixer.get_busy()):
                pygame.mixer.Channel(0).stop()
                self.hetkelm√§ngivalauluindeks += 1
                pygame.mixer.Channel(0).play(pygame.mixer.Sound(self.lauludej√§rjend[self.hetkelm√§ngivalauluindeks]))
                self.Kanal0t√∂√∂olek = True
                time.sleep(1)
      # v√µimaldab valida muusikafaili            
    def valifail(self):
        # avab dialoogi, et kasutaja saaks faili valida
        self.failinimi = filedialog.askopenfilenames(title="Vailge helifail mida m√§ngida", initialdir=os.path.expanduser('~/music'), filetypes=[('Audio Files', '*.flac *.mp3 *.wav *.aac *.ogg *.wma *opus *.alac *.mid')])
        if self.failinimi == None:
            pass
        else:
            # lisab valitud faili j√§rjekorda
            for i in self.failinimi: #https://www.geeksforgeeks.org/how-to-add-music-playlist-in-pygame/
                self.lauludej√§rjend.append(i)
                print(self.lauludej√§rjend)#See on siin ainult testimiseks
    
    # m√§ngib j√§rgmise laulu j√§rjekorras
    def j√§rgminelaul(self):
        if len(self.lauludej√§rjend) <= self.hetkelm√§ngivalauluindeks + 1:
            pass
        else:
            # l√µpetab praeguse laulu m√§ngimise ning alustab j√§rgmise laulu m√§ngimist
            pygame.mixer.Channel(0).stop()
            self.hetkelm√§ngivalauluindeks += 1
            pygame.mixer.Channel(0).play(pygame.mixer.Sound(self.lauludej√§rjend[self.hetkelm√§ngivalauluindeks]))
            self.Kanal0t√∂√∂olek = True
     # shuffle ehk laulude j√§rjekorra segamine
    def shuffle(self):
        # kontrollib kas shuffle on juba tehtud
        if self.korra_juba_tehtud_shuffle == False:
            # esimesel korral salvestab originaalj√§rjekorra ja segab laulud
            self.originaalj√§rjend = self.lauludej√§rjend.copy()
            random.shuffle(self.lauludej√§rjend)
            self.korra_juba_tehtud_shuffle = True
            self.shufflet√∂√∂m√§√§raja = True
       # kui shuffle on aktiivne, taastab originaalj√§rjekorra
        elif self.shufflet√∂√∂m√§√§raja:
            self.lauludej√§rjend = self.originaalj√§rjend
       # √ºlej√§√§nud puhkudel segab laulud uuesti
        else:
            random.shuffle(self.lauludej√§rjend)
    
    # vol√º√ºmi muutmise funktsioon
    def slider_v√§√§rtused(self, v√§√§rtus):
        sliderv√§√§rtus = v√§√§rtus
        pygame.mixer.Channel(0).set_volume(float(v√§√§rtus) / 100.0)
     
     # laulu kerimise funktsioon (t√ºhi)
    def scrollilaulus(self):
        pass
    
    #rakenduse sulgemine
    def sulgemine(self):
        # peatab helis√ºsteemi ja sulgeb akna
        pygame.mixer.quit() #https://www.pygame.org/docs/ref/mixer.html
        self.root.destroy()        

UI()
